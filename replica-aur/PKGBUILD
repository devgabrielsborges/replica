# Maintainer: Gabriel Borges <dev.gabrielsborges@proton.me>

pkgname=rpc-git
pkgver=1.0.0.r0.g$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
pkgrel=1
pkgdesc="Command-line utility for copying default prompt and instruction templates (builds from git)"
arch=('i686' 'x86_64' 'armv7h' 'aarch64')
url="https://github.com/devgabrielsborges/replica"
license=('MIT')
provides=('rpc')
conflicts=('rpc')
makedepends=('git' 'meson' 'ninja')
depends=() # Runtime dependencies
source=("git+$url.git") # Source URL for git clone
sha256sums=('SKIP') # For VCS sources, checksums are skipped

pkgver() {
  # Corrected cd into the cloned git repo directory
  cd "$srcdir/$(basename "$url" .git)"
  printf "1.0.0.r%s.g%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "$srcdir/$(basename "$url" .git)"
}

build() {
  cd "$srcdir/$(basename "$url" .git)"
  # arch-meson sets up a build directory, typically named 'build' by convention here
  arch-meson build
  ninja -C build
}

check() {
  cd "$srcdir/$(basename "$url" .git)"
  # Assumes tests are run with meson test from within the 'build' directory
  # meson test will return non-zero on failure, causing makepkg to stop unless 'nocheck' is in options
  meson test -C build --print-errorlogs
}

package() {
  cd "$srcdir/$(basename "$url" .git)"
  DESTDIR="$pkgdir/" meson install -C build

  install -Dm644 LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}